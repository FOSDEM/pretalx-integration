# Generated by Django 4.2.5 on 2023-11-15 16:40

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations


class Migration(migrations.Migration):
    dependencies = [
        ("pretalx_auditlog", "0003_remove_eventproxy_snapshot_insert_and_more"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="teaminviteproxy",
            name="snapshot_insert",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="teaminviteproxy",
            name="snapshot_update",
        ),
        pgtrigger.migrations.RemoveTrigger(
            model_name="teaminviteproxy",
            name="beforedelete",
        ),
        migrations.RemoveField(
            model_name="teaminviteproxyevent",
            name="token",
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="teaminviteproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_insert",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "pretalx_auditlog_teaminviteproxyevent" ("created", "email", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "team_id", "updated") VALUES (NEW."created", NEW."email", NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."team_id", NEW."updated"); RETURN NULL;',
                    hash="0713d5e0a422290cd9f267024ba4acc125ec1cc3",
                    operation="INSERT",
                    pgid="pgtrigger_snapshot_insert_58296",
                    table="event_teaminvite",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="teaminviteproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="snapshot_update",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    condition='WHEN (OLD."id" IS DISTINCT FROM (NEW."id") OR OLD."created" IS DISTINCT FROM (NEW."created") OR OLD."updated" IS DISTINCT FROM (NEW."updated") OR OLD."team_id" IS DISTINCT FROM (NEW."team_id") OR OLD."email" IS DISTINCT FROM (NEW."email"))',
                    func='INSERT INTO "pretalx_auditlog_teaminviteproxyevent" ("created", "email", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "team_id", "updated") VALUES (NEW."created", NEW."email", NEW."id", _pgh_attach_context(), NOW(), \'snapshot\', NEW."id", NEW."team_id", NEW."updated"); RETURN NULL;',
                    hash="ba61e3f54958e280239ebb6c9f579dc63e3a3a99",
                    operation="UPDATE",
                    pgid="pgtrigger_snapshot_update_7e855",
                    table="event_teaminvite",
                    when="AFTER",
                ),
            ),
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="teaminviteproxy",
            trigger=pgtrigger.compiler.Trigger(
                name="beforedelete",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    func='INSERT INTO "pretalx_auditlog_teaminviteproxyevent" ("created", "email", "id", "pgh_context_id", "pgh_created_at", "pgh_label", "pgh_obj_id", "team_id", "updated") VALUES (OLD."created", OLD."email", OLD."id", _pgh_attach_context(), NOW(), \'beforedelete\', OLD."id", OLD."team_id", OLD."updated"); RETURN NULL;',
                    hash="2849fae3eb1712d638bd2166613e9b41e5bd6b6f",
                    operation="DELETE",
                    pgid="pgtrigger_beforedelete_5ea7d",
                    table="event_teaminvite",
                    when="AFTER",
                ),
            ),
        ),
    ]
